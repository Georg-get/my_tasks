### Условие задачи:
# Напишите алгоритм определения n счастливого числа.
# Счастливое число — это число, определяемое следующим процессом:
# Начиная с любого положительного целого числа, замените число суммой квадратов его цифр.
# Повторяйте процесс до тех пор, пока число не станет равным 1 (где оно и останется),
# или пока он не будет повторяться бесконечно в цикле, который не включает 1.
# Счастливыми являются те числа, для которых этот процесс заканчивается на 1.
# Возвращает, true если n это счастливое число, а false если нет.

# Example 1:
# Input: n = 19
# Output: true
# Explanation:
# 12 + 92 = 82
# 82 + 22 = 68
# 62 + 82 = 100
# 12 + 02 + 02 = 1

# Example 2:
# Input: n = 2
# Output: false

### Краткое условие:
# Проверить хорошее ли число n, если да то вернуть True, если нет то вернуть False.

###                         С хэшом таблицы
# Алгоритм решение задачи:
# 0) Создаем пустой словарь dict.
# 1) Проходимся циклом ваилд пока n не станет равно 1 и ключа n не будет в словаре dict,
# 1.1) Создаем переменную total со значением 0.
# 1.2) Проходимся циклом по строке n, увеличиваем переменную total на число i возведенное в квадрат.
# 1.3) Добавляем ключ n со значением total в словарь dict.
# 1.4) Меняем значение переменной n на total.
# 2) Вернуть равно ли n одному ???


# # Сложность:
# # 1) Время O(log(n)) (n^2)
# # 2) Память O(1)

n = 19

def isHappy(n):
    dictSet = set()

    while n != 1:
        sum = 0

        while n != 0:
            division = n % 10 # 9
            sum += division * division # 81
            n //= 10 # 1

        if sum in dictSet:
            return False

        dictSet.add(sum)
        n = sum

    return True

isHappy(n)

assert isHappy(n=19) == True
assert isHappy(n=2) == False

###                         Без хэша таблицы
# Алгоритм решение задачи:
# 0) Создаем переменную c со значением n и переменную s со значением 0.
# 1) Проходимся циклом while s < 8,
# 1.1) Увеличиваем занчение переменой s на 1.
# 1.2) Создаем переменую sun со значением 0.
# 1.3) Проходимся циклом по числу n, увеличиваем значение переменой sun на i в квадрате.
# 1.4) Присваеваем значение переменной n значение переменной sun.
# 1.5) Если n рано 1 , то верни True.
# 1.6) Если n равно с, то верни False.

# Сложность:
# 1) Время O (log n)
# 2) Память O(1)
#
# n = 19
#
# def isHappy(n):
#     c = n
#     s = 0
#
#     while s < 8:
#         s += 1
#         sun = 0
#
#         for i in str(n):
#             sun += int(i) ** 2 # sun (равна 1) = 1+ 9 в квадрате = 82
#
#         # 82
#         n = sun #82 #68 #100 #1
#
#         if n == 1:
#             return True
#         elif n == c:
#             return False
#
# isHappy(n)
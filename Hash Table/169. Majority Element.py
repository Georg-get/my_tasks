### Условие задачи:
# Учитывая массив nums размера n, верните элемент большинства.
# Элемент большинства — это элемент, который появляется более ⌊n / 2⌋ одного раза.
# Вы можете предположить, что элемент большинства всегда существует в массиве.

# Example 1:
# Input: nums = [3,2,3]
# Output: 3

# Example 2:
# Input: nums = [2,2,1,1,1,2,2]
# Output: 2

### Краткое условие:
# Вернуть число которое больше всего повторяеться в массиве.

# Алгоритм решение задачи:
# 0) Создаем пустой словарь dict.
# 1) Проходимся циклом по массиву nums,
# 1.1) Если ключ i есть в словаре dict, то увеличь значние ключа i на 1.
# 1.2) Если ключ i НЕТу в словаре dict, то добавь ключь i со значением 1 в словарь dict.
# 2) Вернуть ключ самым большим значением из словаря dict.

# Сложность:
# 1) Время O(n)
# 2) Память O(n)

nums = [3, 2, 3]

def majorityElement(nums):
    dict = {}

    for i in nums:
        if i in dict:
            dict[i] += 1
        else:
            dict[i] = 1
    # {3: 2, 2: 1}
    return max(dict, key=dict.get)  # 3

majorityElement(nums)

assert majorityElement(nums=[3, 2, 3]) == 3
assert majorityElement(nums=[2, 2, 1, 1, 1, 2, 2]) == 2
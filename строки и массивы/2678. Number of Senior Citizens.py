### Условие задачи:
# Вам дан массив строк с нулевым индексом details. Каждый элемент details предоставляет информацию о данном пассажире,
# сжатую в строку длиной 15. Система такова, что:
# Первые десять символов состоят из номеров телефонов пассажиров.
# Следующий символ обозначает пол человека.
# Следующие два символа используются для обозначения возраста человека.
# Последние два символа определяют место, отведенное этому человеку.
# Возвращает количество пассажиров строго старше 60 лет.

# Example 1:
# Input: details = ["7868190130M 75 22","5303914400F 92 11","9273338290F 40 10"]
# Output: 2
# Explanation: The passengers at indices 0, 1, and 2 have ages 75, 92, and 40. Thus, there are 2 people who are over 60 years old.

# Example 2:
# Input: details = ["1313579440F 20 36","2921522980M 56 44"]
# Output: 0
# Explanation: None of the passengers are older than 60.

### Краткое условие:
# Надо вернуть колличество элементов массива которые больше 60.

# Алгоритм решение задачи:
# 0) Создаем переменную result со значением 0,
# 1) Проходимся циклом по массиву details,
# 1.1) Создаем переменную age со значением последних предпоследних чисел в строке массива details.
# 1.2) Если age больше 60, то увеличь переменную result на 1.
# 2) Верни переменную result.

# Сложность:
# 1) Время O(n)
# 2) Память O(1)

details = ["7868190130M7522", "5303914400F9211", "9273338290F4010"]

def countSeniors(details):
    result = 0

    for i in details:
        age = int(i[11:13]) # 75 92 40
        if age > 60:
            result += 1

    return result # 2

countSeniors(details)

assert countSeniors(details=["7868190130M7522", "5303914400F9211", "9273338290F4010"]) == 2
assert countSeniors(details=["1313579440F2036", "2921522980M5644"]) == 0
assert countSeniors(
    details=["9751302862F0693", "3888560693F7262", "5485983835F0649", "2580974299F6042", "9976672161M6561",
             "0234451011F8013", "4294552179O6482"]) == 4
assert countSeniors(details=["5612624052M0130", "5378802576M6424", "5447619845F0171", "2941701174O9078"]) == 2
### Условие задачи:
# Дан массив целых чисел, отсортированный в неубывающем порядке.
# В массиве есть ровно одно целое число, которое встречается более 25% времени. Верните это целое число.

# Example 1:
# Input: arr = [1,2,2,6,6,6,6,7,10]
# Output: 6

# Example 2:
# Input: arr = [1,1]
# Output: 1

### Краткое условие:
# В массиве есть ровно одно целое число, которое встречается более 25% времени. Верните это целое число.

# Алгоритм решение задачи:
# 0) Создаем пустой словарь.
# 1) Проходимся циклом по массиву arr,
# 1.1) Если ключ i есть в словаре dict, то увеличь значение ключ i на 1.
# 1.2) Если ключ i НЕТУ в словаре dict, то добавь ключ i со значением 1.
# 2) Верни ключ с самым большим значением из словаря dict.

# Сложность:
# 1) Время O(n)
# 2) Память O(n)

arr = [1, 2, 2, 6, 6, 6, 6, 7, 10]

def findSpecialInteger(arr):
    dict = {}

    for i in arr:
        if i in dict:
            dict[i] += 1
        else:
            dict[i] = 1

    return max(dict, key=dict.get)

findSpecialInteger(arr)

assert findSpecialInteger(arr=[1, 2, 2, 6, 6, 6, 6, 7, 10]) == 6
assert findSpecialInteger(arr=[1, 1]) == 1

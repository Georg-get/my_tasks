### Условие задачи:
# Вам дана строка, s состоящая из цифр и '#'. Мы хотим сопоставить s английские строчные буквы следующим образом:
# Символы ( 'a' to 'i') обозначаются ( '1'to '9') соответственно.
# Символы ( 'j' to 'z') обозначаются ( '10#'to '26#') соответственно.
# Верните строку, сформированную после сопоставления.
# Тестовые случаи генерируются таким образом, чтобы всегда существовало уникальное сопоставление.

# Example 1:
# Input: s = "10#11#12"
# Output: "jkab"
# Explanation: "j" -> "10#" , "k" -> "11#" , "a" -> "1" , "b" -> "2".

# Example 2:
# Input: s = "1326#"
# Output: "acz"

### Краткое условие:
# Надо сдекадировать строку s.

# Алгоритм решение задачи:
# 0) Создаем две пустые строки string и result, и словарь dict где все буквы анг алфавита это значение а ключи это номер буквы в алфавите.
# 1) Проходимся циклом по диапазону от 0 до длины строки s,
# 1.1) Если i это решотка,
# 1.1.1) Если длина строки string равна 1 или ее длина равна 2, то увеличь result на значение ключа string.
# 1.1.2) Если длина строки string НЕ равна 1 или ее длина НЕ равна 2,
# 1.1.2.1) То пройдись циклом по диапазону от 0 до длины строки string - 2, увеличь переменную result на dict[string[j]].
# 1.1.2.2) Увеличь переменную result на dict[string[j + 1:]].
# 1.1.3) Сбрось значение строки string на пустоту.
# 1.2) Если i НЕ решотка, то увеличь строку string на s[i].
# 2) Если строка string не пустая,
# 2.1) То пройдись циклом по диапазону от 0 до длины строки string,
# 2.1.1) Увеличь переменную result на dict[string[j]].
# 3) Верни строку result.

# Сложность:
# 1) Время O(n)
# 2) Память O(1)

                                            ### Хэш таблицы ###

s = "10#11#12"

def freqAlphabets(s):
    string = ''
    result = ''
    dict = {'1': 'a', '2': 'b', '3': 'c', '4': 'd', '5': 'e', '6': 'f', '7': 'g', '8': 'h', '9': 'i', '10': 'j',
            '11': 'k', '12': 'l', '13': 'm', '14': 'n', '15': 'o', '16': 'p', '17': 'q', '18': 'r', '19': 's',
            '20': 't',
            '21': 'u', '22': 'v', '23': 'w', '24': 'x', '25': 'y', '26': 'z'}

    for i in range(len(s)):  # range(0,8)
        if s[i] == '#':

            if len(string) == 1 or len(string) == 2:
                result += dict[string]

            else:
                for j in range(len(string) - 2): # range(0, 2) автотест номер два
                    result += dict[string[j]]

                result += dict[string[j + 1:]]

            string = ''

        else:
            string += s[i]
    # string = "12" # result = "jk"
    if string != '':
        for j in range(len(string)):  # range(0,2)
            result += dict[string[j]]
    #       jkab
    return result

freqAlphabets(s)

# assert freqAlphabets(s="10#11#12") == "jkab"
assert freqAlphabets(s="1326#") == "acz"
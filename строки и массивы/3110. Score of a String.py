### Условие задачи:
# Вам дана строка s.
# Оценка строки определяется как сумма абсолютной разницы между значениями ASCII соседних символов.
# Вернуть оценку s.

# Example 1:
# Input: s = "hello"
# Output: 13
# Explanation:
# The ASCII values of the characters in s are: 'h' = 104, 'e' = 101, 'l' = 108, 'o' = 111.
# So, the score of s would be |104 - 101| + |101 - 108| + |108 - 108| + |108 - 111| = 3 + 7 + 0 + 3 = 13.

# Example 2:
# Input: s = "zaz"
# Output: 50
# Explanation:
# The ASCII values of the characters in s are: 'z' = 122, 'a' = 97.
# So, the score of s would be |122 - 97| + |97 - 122| = 25 + 25 = 50.

### Краткое условие:
# Надо перевести каждую букву ASCII код и посчитать сумму всей строки s.

# Алгоритм решение задачи:
# 0) Ставим левый указатель на 1 символ, а правый указатель на второй символ строки s, и создаем переменную result со значением 0.
# 1) Проходимся циклом пока правый указатель не дойдет до конца строки s,
# 1.1) Увеличивайем result на результат вычитания ASCII коде левого и правого указателя.
# 1.2) Двигаем указатели на 1 шаг в права.
# 2) Возращаем переменную result.

# Сложность:
# 1) Время O(n)
# 2) Память O(1)

s = "hello"

def scoreOfString(s):
    left = 0
    right = 1
    result = 0

    while right < len(s): # пока правый указатель не дойдет до конца строки

        result += abs(ord(s[left]) - ord(s[right])) # abs - метод который возращаент получить положительное число если число отрицательное
                                                    # ord - метод который получаем ASCII код буквы
        # 0            104          - 101 = 3
        # 3            101          - 108 = 7
        # 10           108          - 108 = 0
        # 10           108          - 108 = 0

        left += 1
        right += 1
    #       10
    return result

scoreOfString(s)

assert scoreOfString(s="hello") == 13
assert scoreOfString(s="zaz") == 50
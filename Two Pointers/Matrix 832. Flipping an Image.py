### Условие задачи:
# Учитывая n x n двоичную матрицу image, переверните изображение по горизонтали ,
# затем инвертируйте его и верните полученное изображение .
# Переворот изображения по горизонтали означает, что каждая строка изображения перевернута.
# Например, переворот [1,1,0]по горизонтали приводит к [0,1,1].
# Инвертирование изображения означает, что каждое из них 0заменяется на 1, а каждое 1заменяется на 0.
# Например, инвертирование [0,1,1]результатов в [1,0,0].

# Example 1:
# Input: image = [[1,1,0],[1,0,1],[0,0,0]]
# Output: [[1,0,0],[0,1,0],[1,1,1]]
# Explanation: First reverse each i: [[0,1,1],[1,0,1],[0,0,0]].
# Then, invert the image: [[1,0,0],[0,1,0],[1,1,1]]

# Example 2:
# Input: image = [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]
# Output: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
# Explanation: First reverse each i: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]].
# Then invert the image: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]

### Краткое условие:
#  Надо с начало поменять местами 0 элемент и 2 элемент в массивах матрицы image затем поменять 0 на 1, а 1 на 0.
# В матрице поменять 0 на 1, а 1 на 0 и вернуть матрицу.

# Алгоритм решение задачи:
# 0) Проходимся циклом по матрице image,
# 0.1) Создаем переменные left со значениеем 0 и right со значенеим длины массива из матрицы image,
# 0.2) Проходимся циклом ваил пока left не станет меньше или равно right,
# 0.2.1) Выполняется побитовая инверсия (побитовое исключающее ИЛИ с 1) для элементов row[left] и row[right], результаты сохраняются в tempLeft и tempRight.
# 0.2.2) Элементы row[left] и row[right] заменяются на инвертированные значения tempRight и tempLeft.
# 0.2.3) Уменьшается значение right и увеличивается значение left.
# 1) Вернуть матрицу image.

# Сложность:
# 1) Время O(n)
# 2) Память O(n)

image = [[1, 1, 0], [1, 0, 1], [0, 0, 0]]

def flipAndInvertImage(image):

    for row in image:
        left = 0
        right = len(row) - 1

        while left <= right:
            tempLeft = row[left] ^ 1
            tempRight = row[right] ^ 1
            row[left] = tempRight
            row[right] = tempLeft
            right -= 1
            left += 1
    return image

flipAndInvertImage(image)